package disciplina3;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class CursoApp {
	// alt para cima subir a linha
	static String url = "jdbc:oracle:thin:@localhost:1521:XE";
	static String usuario = "curso_java";
	static String senha = "schema";

	static Connection conexao; // Connection que faz a conexão com o banco de
	// dados

	public static void conectar() throws SQLException {
		conexao = DriverManager.getConnection(url, usuario, senha);
		conexao.setAutoCommit(false);
	}

	public static void desconectar() throws SQLException {
		conexao.close();
	}
	
	public static void inserir (int cdcurso, String nome, double valor, String url) throws SQLException{
		String sql = "INSERT INTO curso (cdcurso, nome, valor, url) VALUES ('" + cdcurso + 
				"' , '" + nome + "'," + valor + ",'" + url + "')";
		Statement statement = conexao.createStatement();
		statement.execute(sql);
		conexao.commit();//Confirmo a transação com o commit
	}
	
	public static void inserirPS (int cdcurso, String nome, double valor, String url) throws SQLException{
		String sql = "INSERT INTO curso (cdcurso, nome, valor, url) VALUES (?,?,?,?)";
		PreparedStatement ps = conexao.prepareStatement(sql);
		ps.setInt(1,cdcurso);
		ps.setString(2, nome);
		ps.setDouble(3,valor);
		ps.setString(4, url);
		ps.executeUpdate();
		conexao.commit();
	}
	
	public static void inserirSP (long cdcurso, String nome, double valor, String url) throws SQLException{
		String sql = "{call sp_inserircurso(?,?,?,?)";
		CallableStatement cstmt = conexao.prepareCall(sql);
		cstmt.setLong(1, cdcurso);
		cstmt.setString(2, nome);
		cstmt.setDouble(3, valor);
		cstmt.setString(4,url);
		cstmt.execute();
		conexao.commit();
	}
	
	public static void consultar (long cdcurso) throws SQLException{
		String sql = "(SELECT * FROM curso WHERE cdcurso= " + cdcurso +")";
		Statement s = conexao.createStatement();
		ResultSet rs = s.executeQuery(sql);
		while (rs.next()){
			System.out.println("Codigo Do curso..:  " + rs.getInt(1) + "\nNome..: " + rs.getString(2) + "\nValor..: " 
		+ rs.getFloat(3)+ "\nURL..:  " + rs.getString(4));
		}
	}
	
	public static void consultarTodos () throws SQLException{
		String sql = "(SELECT * FROM curso)";
		Statement s = conexao.createStatement();
		ResultSet rs = s.executeQuery(sql);
		int contador = 0;
		while (rs.next()){
			System.out.println("Codigo Do curso..:  " + rs.getInt(1) + "\nNome..: " + rs.getString(2) + "\nValor..: " 
		+ rs.getFloat(3)+ "\nURL..:  " + rs.getString(4));
			System.out.println("___________________________________________________________________________________");
			contador++;
		}
		
		System.out.println(contador + "  Cursos cadastrados");
		
	}
	
	public static void alterar(int cdcurso, String nome, float valor, String url) throws SQLException{
		String sql = "UPDATE curso SET  nome ='"+ nome + "', valor = " + valor + ",url = '" + url + "' WHERE cdcurso =" + cdcurso; 
		Statement statement = conexao.createStatement();
		statement.executeUpdate(sql);
		conexao.commit();
	}
	
	public static void delete (int cdcurso) throws SQLException{
		String sql = "DELETE curso WHERE cdcurso = " + cdcurso;
		Statement statement = conexao.createStatement();
		statement.executeUpdate(sql);
		conexao.commit();
	}
	
	public static void main(String[] args) throws SQLException {
		try {
			// primeira coisa que eu tenho que fazer é conectar no banco
			conectar();

			// Criar um menu com opções de tarefas ao qual o usuario quer
			// realizar
			// System.in para ler do teclado
			Scanner entrada = new Scanner(System.in);
			int opcao = 0;
			long cdcurso;
			String nome;
			float valor;
			String url;
				
			while (opcao != 6) {
				System.out.println("Sistema de gerenciamento de cursos");
				System.out.println("===================================");
				System.out.println("Digite [1] Para Consultar todos os cursos");
				System.out.println("Digite [2] Para Consultar Um Curso Especifico");
				System.out.println("Digite [3] Para Cadastrar um Novo Curso ");
				System.out.println("Digite [4] Para Alterar um Curso ");
				System.out.println("Digite [5] Para Excluir um Curso ");
				System.out.println("Digite [6] Para Sair");
				System.out.println("===================================");

				opcao = entrada.nextInt();

				switch (opcao) {
				case 1:// Consultando Todos
					System.out.println("[1] Consultar Todos");
					consultarTodos();

					break;
				case 2:// Consultar
					System.out.println("[2] Consultar");
					System.out.println("Favor Informar o Codigo do Curso..:  ");
					cdcurso = entrada.nextLong();
					consultar(cdcurso);
					break;
				case 3:// Cadastrar
					System.out.println("[3] Inserir");
					System.out.println("Favor Informar o Codigo do Curso .:  ");
					cdcurso = entrada.nextInt();
					entrada.nextLine();// Esvaziar o Buffer do teclado
					System.out.println("Favor Informar o Nome.:  ");
					nome = entrada.nextLine();
					System.out.println("Favor Informar o Valor.:  ");
					valor = entrada.nextFloat();
					entrada.nextLine();// Esvaziar o Buffer do teclado
					System.out.println("Favor Informar a url de entrada.:  ");
					url = entrada.next();
					inserir((int) cdcurso, nome, valor, url);
					break;
				case 4:// Alterar
					System.out.println("[4] Alterar");
					System.out.println("Favor Informar o Codigo do Curso.:  ");
					cdcurso = entrada.nextInt();
					entrada.nextLine();// Esvaziar o Buffer do teclado
					System.out.println("Favor Informar o Nome do Curso.:  ");
					nome = entrada.next();
					System.out.println("Favor Informar o Valor.:  ");
					valor = entrada.nextFloat();
					entrada.nextLine();// Esvaziar o Buffer do teclado
					System.out.println("Favor Informar a URL.:  ");
					url = entrada.next();
					alterar((int) cdcurso, nome, valor, url);
					break;
				case 5://Excluir
					System.out.println("[5] Excluir");
					System.out.println("Favor Informar o Codigo do Curso.:  ");
					cdcurso = entrada.nextInt();
					delete((int) cdcurso);
					break;
				case 6:
					System.out.println("[6] Encerrando o Sistema");
				}
			}
			entrada.close();
			desconectar();
		} catch (Exception e) {
			e.printStackTrace();// printStackTrace() Imprime a pilha de erros
		}
	}
	
}


